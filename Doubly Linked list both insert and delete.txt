public class Main { 
	Node head;
	Node tail;
	class Node { 
		int data; 
		Node prev; 
		Node next; 
        Node(int d) { data = d; } 
	} 
	public void insert(int new_data) {    
        Node new_Node = new Node(new_data);    
        if(head == null) {  
        head = tail = new_Node;  
        head.prev = null;    
        tail.next = null;  
    }  
    else {    
        tail.next = new_Node;  
        new_Node.prev = tail;  
        tail = new_Node;
        tail.next = null;  
    }  
    }     
	public void push(int new_data) 
	{ 
		Node new_Node = new Node(new_data); 
		new_Node.next = head; 
		new_Node.prev = null; 
		if(head != null) head.prev = new_Node; 
		head = new_Node; 
	} 
    public void printlist(Node node) 
	{ 
		Node last = null; 
    	while (node != null) { 
			System.out.print(node.data + " "); 
			last = node; 
			node = node.next; 
		} 
    	System.out.println(); 
	} 
	void deleteNode(Node del) 
	{ 
		if (head == null || del == null) { 
			return; 
		} 
    	if (head == del) { 
			head = del.next; 
		} 
		if (del.next != null) { 
			del.next.prev = del.prev; 
		} 
		if (del.prev != null) { 
			del.prev.next = del.next; 
		}
		return; 
	} 
	
		void deleteValue(int del) 
	{ 
	    Node temp=head;
		if (head == null) 
			return; 
    	if (temp.data == del) { 
			head = head.next; 
		} 
		while(temp!=null){
		    if(temp.data==del) {
		     	if (temp.next != null) { 
			        temp.next.prev = temp.prev; 
	    	    } 
		        if (temp.prev != null) { 
			        temp.prev.next = temp.next; 
		        }   
		    }
		    temp=temp.next;
		}
	    return; 
	} 

	public static void main(String[] args) 
	{ 
		Main dll = new Main(); 
		dll.insert(1); 
		dll.insert(2); 
		dll.insert(3); 
        dll.insert(4);
        dll.deleteValue(2);
        dll.deleteNode(dll.head);

		System.out.println("Doubly Linked List:"); 
		dll.printlist(dll.head); 
	} 
} 